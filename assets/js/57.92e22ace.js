(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{411:function(e,a,n){"use strict";n.r(a);var s=n(42),t=Object(s.a)({},(function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"はじめに"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#はじめに"}},[e._v("#")]),e._v(" はじめに")]),e._v(" "),n("p",[e._v("こんにちは、Nushellプロジェクトへようこそ。このプロジェクトのゴールは、シンプルなコマンドをパイプでつなぎ合わせるというUnixのシェル哲学を取り入れ、これを現代の開発スタイルにもたらすことです。")]),e._v(" "),n("p",[e._v("NuはBashなどの従来からのシェル、PowerShellなどの高度なシェル、関数型プログラミング、システムプログラミングなど、よく知られた多くの領域からヒントを得ています。しかしNuは何でもこなせることを目指すのではなく、いくつかのことをうまくこなせることに注力しています。")]),e._v(" "),n("ul",[n("li",[e._v("モダンな雰囲気の柔軟なクロスプラットフォームなシェルを作ること")]),e._v(" "),n("li",[e._v("データ構造を理解するコマンドラインアプリケーションを組みあわせることができること")]),e._v(" "),n("li",[e._v("現代的なCLIアプリケーションが提供するUXをそなえること")])]),e._v(" "),n("p",[e._v("Nuになにができるかをみるには、実際に使ってみることが一番です。")]),e._v(" "),n("p",[n("code",[e._v("ls")]),e._v("コマンドを実行して最初に気づくことは、テキストブロックではなく、構造化されたテーブルデータがあらわれることです。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("> ls\n----+------------------+-----------+----------+----------+----------------+----------------\n #  | name             | type      | readonly | size     | accessed       | modified\n----+------------------+-----------+----------+----------+----------------+----------------\n 0  | .azure           | Directory |          | 4.1 KB   | 2 months ago   | a week ago\n 1  | IMG_1291.jpg     | File      |          | 115.5 KB | a month ago    | 4 months ago\n 2  | Cargo.toml       | File      |          | 3.1 KB   | 17 minutes ago | 17 minutes ago\n 3  | LICENSE          | File      |          | 1.1 KB   | 2 months ago   | 2 months ago\n 4  | readonly.txt     | File      | readonly | <empty>  | a month ago    | a month ago\n 5  | target           | Directory |          | 4.1 KB   | 2 days ago     | 15 minutes ago\n...\n")])])]),n("p",[e._v("このテーブルはディレクトリの内容を別の方法で表示しているだけではありません。このテーブルを利用するとスプレッドシートのように、よりインタラクティブにデータを操作できます。")]),e._v(" "),n("p",[e._v("最初に行うことはテーブルを名前でソートすることです。これを行うには、"),n("code",[e._v("ls")]),e._v("コマンドの出力を、列の内容に基づいてテーブルをソートできるコマンドに送ります。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("> ls | sort-by name\n----+------------------+-----------+----------+----------+----------------+----------------\n #  | name             | type      | readonly | size     | accessed       | modified\n----+------------------+-----------+----------+----------+----------------+----------------\n 0  | .azure           | Directory |          | 4.1 KB   | 2 months ago   | a week ago\n 1  | .cargo           | Directory |          | 4.1 KB   | 2 months ago   | 2 months ago\n 2  | .editorconfig    | File      |          | 148 B    | 2 months ago   | 2 months ago\n 3  | .git             | Directory |          | 4.1 KB   | 2 months ago   | 20 minutes ago\n 4  | .gitignore       | File      |          | 58 B     | a week ago     | a week ago\n 5  | .vscode          | Directory |          | 4.1 KB   | a month ago    | a month ago\n...\n")])])]),n("p",[e._v("この作業をおこなうために、"),n("code",[e._v("ls")]),e._v("にコマンドライン引数を渡していないことがわかります。代わりに、Nuが提供する"),n("code",[e._v("sort-by")]),e._v("コマンドを利用して、"),n("code",[e._v("ls")]),e._v("コマンドの出力をソートしています。")]),e._v(" "),n("p",[e._v("Nuはテーブルを扱うために多くのコマンドを提供しています。例えば、４キロバイトを超えるファイルのみを表示するように"),n("code",[e._v("ls")]),e._v("コマンドの出力をフィルターできます。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("> ls | where size > 4kb\n----+----------------+------+----------+----------+----------------+----------------\n #  | name           | type | readonly | size     | accessed       | modified\n----+----------------+------+----------+----------+----------------+----------------\n 0  | IMG_1291.jpg   | File |          | 115.5 KB | a month ago    | 4 months ago\n 1  | README.md      | File |          | 11.1 KB  | 2 days ago     | 2 days ago\n 2  | IMG_1291.png   | File |          | 589.0 KB | a month ago    | a month ago\n 3  | IMG_1381.jpg   | File |          | 81.0 KB  | a month ago    | 4 months ago\n 4  | butterfly.jpeg | File |          | 4.2 KB   | a month ago    | a month ago\n 5  | Cargo.lock     | File |          | 199.6 KB | 22 minutes ago | 22 minutes ago\n")])])]),n("p",[e._v("Unix哲学にあるように、コマンドをつなぎ合わせることで様々な組み合わせを作り出すことができます。別のコマンドをみてみましょう。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("> ps\n-----+-------+----------+------+--------------------------------------------------------------------------------\n #   | pid   | status   | cpu  | name\n-----+-------+----------+------+--------------------------------------------------------------------------------\n 0   | 1003  | Unknown  | 0.00 |\n 1   | 1515  | Sleeping | 0.00 | /usr/lib/gnome-settings-daemon/gsd-screensaver-proxy\n 2   | 2128  | Sleeping | 0.00 | /usr/lib/gnome-settings-daemon/gsd-screensaver-proxy\n 3   | 2285  | Unknown  | 0.00 |\n 4   | 8872  | Sleeping | 0.00 | /usr/lib/gvfs/gvfsd-dnssd--spawner:1.23/org/gtk/gvfs/exec_spaw/4\n 5   | 1594  | Sleeping | 0.00 | /usr/lib/ibus/ibus-engine-simple\n")])])]),n("p",[e._v("もしあなたがLinuxを利用しているなら"),n("code",[e._v("ps")]),e._v("コマンドには馴染みがあるでしょう。これを使うと、現在システムが実行しているすべてのプロセスの状態や名前の一覧を取得することができます。プロセスのCPU負荷も確認することができます。")]),e._v(" "),n("p",[e._v("CPUをアクティブに利用しているプロセスを表示したい場合はどうでしょうか。さきほどの"),n("code",[e._v("ls")]),e._v("コマンドと同じように、"),n("code",[e._v("ps")]),e._v("コマンドが返すテーブルを利用することができます。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("> ps | where cpu > 10\n---+-------+----------+-------+-----------------------------\n # | pid   | status   | cpu   | name\n---+-------+----------+-------+-----------------------------\n 0 | 1992  | Sleeping | 44.52 | /usr/bin/gnome-shell\n 1 | 1069  | Sleeping | 16.15 |\n 2 | 24116 | Sleeping | 13.70 | /opt/google/chrome/chrome\n 3 | 21976 | Sleeping | 12.67 | /usr/share/discord/Discord\n")])])]),n("p",[e._v("これまで、"),n("code",[e._v("ls")]),e._v("と"),n("code",[e._v("ps")]),e._v("を利用してファイルやプロセスの一覧を表示しました。Nuはこの他にも便利なテーブルを作り出すコマンドを提供します。次に"),n("code",[e._v("date")]),e._v("と"),n("code",[e._v("sys")]),e._v("をみてみましょう。")]),e._v(" "),n("p",[n("code",[e._v("date")]),e._v("を実行すると、現在の日時と時間に関する情報が得られます。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("> date\n------+-------+-----+------+--------+--------+----------\n year | month | day | hour | minute | second | timezone\n------+-------+-----+------+--------+--------+----------\n 2019 | 8     | 17  | 19   | 20     | 50     | +12:00\n------+-------+-----+------+--------+--------+----------\n")])])]),n("p",[n("code",[e._v("sys")]),e._v("はNuが実行されているシステムに関する情報を提供します。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("> sys\n----------+----------+-----------+----------+-----------+-----------\n host     | cpu      | disks     | mem      | temp      | net\n----------+----------+-----------+----------+-----------+-----------\n [object] | [object] | [3 items] | [object] | [3 items] | [3 items]\n----------+----------+-----------+----------+-----------+-----------\n")])])]),n("p",[e._v("これはさきほどまでのテーブルと少し異なります。"),n("code",[e._v("sys")]),e._v("コマンドは単純な値ではなく構造化されたテーブルを含むテーブルを提供します。このデータを見るには表示する列を選択する必要があります。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("> sys | get host\n-------+------------------+----------+--------+----------+----------\n name  | release          | hostname | arch   | uptime   | users\n-------+------------------+----------+--------+----------+----------\n Linux | 5.0.0-21-generic | pop-os   | x86_64 | [object] | [1 item]\n-------+------------------+----------+--------+----------+----------\n")])])]),n("p",[n("code",[e._v("get")]),e._v('コマンドを利用するとテーブルの列の内容にジャンプできます。ここでは、Nuが実行されているホストに関する情報を含む"host"列を調べています。OSの名前、ホスト名、CPUなどです。システム上のユーザーの名前を取得してみましょう。')]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("> sys | get host.users\njonathan\n")])])]),n("p",[e._v('現在、システムには"jonathan"という名前のユーザが１人だけいます。列の名前だけではなくパスも渡せることに気づくでしょう。Nuはパスを受け取るとテーブルの対応するデータを取得します。')]),e._v(" "),n("p",[e._v('テーブルデータではなく、文字列"jonathan"を取得したことに気づかれたかもしれません。Nuはテーブルだけでなく文字列も扱います。文字列はNu以外のコマンドを扱ううえで重要な役割をはたします。')]),e._v(" "),n("p",[e._v("実際にNuの外で文字列がどのように機能するか見てみましょう。ほとんどのOSに組み込まれている"),n("code",[e._v("echo")]),e._v("コマンドを以前の例の中で実行してみましょう。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("> sys | get host.users | echo $it\njonathan\n")])])]),n("p",[e._v("するどい読者にはこれが以前ものと似ていると思われるでしょう。しかし、さきほどの出力で"),n("code",[e._v("echo")]),e._v("を呼び出しているという重要な違いがあります。このように、Nuからデータを"),n("code",[e._v("echo")]),e._v("(または"),n("code",[e._v("git")]),e._v("のようなNu以外の任意のコマンド)にわたすことができるのです。")]),e._v(" "),n("p",[e._v("注：Nuの組み込みコマンドのヘルプテキストは、"),n("code",[e._v("help")]),e._v("コマンドで検出できます。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("> help config\nConfiguration management.\n \nUsage:\n  > config <subcommand> {flags}\n\nSubcommands:\n  config get -\n  config set -\n  config set_into -\n  config clear -\n  config load -\n  config remove -\n  config path -\n\nFlags:\n  -h, --help:  \n")])])])])}),[],!1,null,null,null);a.default=t.exports}}]);